# Read file on Config-Server:
# app-about-company.properties or app-about-company.yml
spring.application.name=HR-SERVICE
 
# Option no. 1: This is the default - Bind directly to the config server using the configuration property:
spring.cloud.config.uri=http://${config.host:config}:${config.port:8888}

# Option no. 2: Lookup a config server using the discovery server, Eureka:
#spring.cloud.config.discovery.enabled: true
#spring.cloud.config.discovery.serviceId: config-server

# I have also added connection configuration that allows the clients to retry connecting to the config server if they can\u2019t access the config server, e.g. during startup of all the services after a docker-compose ut -d - command
spring.cloud.config.failFast=true
spring.cloud.config.retry.initialInterval=3000
spring.cloud.config.retry.multiplier=1.3
spring.cloud.config.retry.maxInterval=5000
spring.cloud.config.retry.maxAttempts=20

management.security.enabled=false